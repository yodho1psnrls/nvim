return {

	-- { 'nvim-lua/plenary.nvim' },
	-- optional, if you are using virtual-text frontend, nvim-cmp is not
	-- required.
	-- { 'hrsh7th/nvim-cmp' },
	-- optional, if you are using virtual-text frontend, blink is not required.
	-- { 'Saghen/blink.cmp' },

	{
		'milanglacier/minuet-ai.nvim',
		dependencies = {'nvim-lua/plenary.nvim'},
		config = function()
			require('minuet').setup {
				provider = 'openai_fim_compatible',
				n_completions = 1, -- recommend for local model for resource saving
				-- I recommend beginning with a small context window size and incrementally
				-- expanding it, depending on your local computing power. A context window
				-- of 512, serves as an good starting point to estimate your computing
				-- power. Once you have a reliable estimate of your local computing power,
				-- you should adjust the context window to a larger value.
				context_window = 512,
				provider_options = {
					openai_fim_compatible = {
						-- For Windows users, TERM may not be present in environment variables.
						-- Consider using APPDATA instead.
						api_key = 'APPDATA',
						name = 'Ollama',
						-- end_point = 'http://localhost:11434/v1/completions',
						end_point = "http://localhost:11434/api/generate", -- llm-ls uses "/api/generate"
						-- model = 'deepseek-coder:1.3b',
						model = 'codegemma:2b-code',
						optional = {
							-- max_tokens = 56,
							-- top_p = 0.9,
							num_predict = 128,
							temperature = 0,
							top_p = 0.9,
							stop = {'<|file_separator|>'},
						},
						-- Llama.cpp does not support the `suffix` option in FIM completion.
            -- Therefore, we must disable it and manually populate the special
            -- tokens required for FIM completion.
            template = {
							prompt = function(context_before_cursor, context_after_cursor, _)
								return '<|fim_prefix|>'
										.. context_before_cursor
										.. '<|fim_suffix|>'
										.. context_after_cursor
										.. '<|fim_middle|>'
							end,
							suffix = false,
            },
					},
				},
				virtualtext = {
					auto_trigger_ft = {},
					keymap = {
							-- accept whole completion
							accept = '<A-A>',
							-- accept one line
							accept_line = '<A-a>',
							-- accept n lines (prompts for number)
							-- e.g. "A-z 2 CR" will accept 2 lines
							accept_n_lines = '<A-z>',
							-- Cycle to prev completion item, or manually invoke completion
							prev = '<A-[>',
							-- Cycle to next completion item, or manually invoke completion
							next = '<A-]>',
							dismiss = '<A-e>',
					},
				},
			}
		end,
	},
}
