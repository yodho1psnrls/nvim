!_TAG_EXTRA_DESCRIPTION	anonymous	/Include tags for non-named objects like lambda/
!_TAG_EXTRA_DESCRIPTION	fileScope	/Include tags of file scope/
!_TAG_EXTRA_DESCRIPTION	pseudo	/Include pseudo tags/
!_TAG_EXTRA_DESCRIPTION	subparser	/Include tags generated by subparsers/
!_TAG_FIELD_DESCRIPTION	epoch	/the last modified time of the input file (only for F\/file kind tag)/
!_TAG_FIELD_DESCRIPTION	file	/File-restricted scoping/
!_TAG_FIELD_DESCRIPTION	input	/input file/
!_TAG_FIELD_DESCRIPTION	name	/tag name/
!_TAG_FIELD_DESCRIPTION	pattern	/pattern/
!_TAG_FIELD_DESCRIPTION	typeref	/Type and name of a variable or typedef/
!_TAG_FIELD_DESCRIPTION!C++	name	/aliased names/
!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_KIND_DESCRIPTION!C++	c,class	/classes/
!_TAG_KIND_DESCRIPTION!C++	d,macro	/macro definitions/
!_TAG_KIND_DESCRIPTION!C++	e,enumerator	/enumerators (values inside an enumeration)/
!_TAG_KIND_DESCRIPTION!C++	f,function	/function definitions/
!_TAG_KIND_DESCRIPTION!C++	g,enum	/enumeration names/
!_TAG_KIND_DESCRIPTION!C++	h,header	/included header files/
!_TAG_KIND_DESCRIPTION!C++	m,member	/class, struct, and union members/
!_TAG_KIND_DESCRIPTION!C++	n,namespace	/namespaces/
!_TAG_KIND_DESCRIPTION!C++	s,struct	/structure names/
!_TAG_KIND_DESCRIPTION!C++	t,typedef	/typedefs/
!_TAG_KIND_DESCRIPTION!C++	u,union	/union names/
!_TAG_KIND_DESCRIPTION!C++	v,variable	/variable definitions/
!_TAG_KIND_DESCRIPTION!CMake	D,option	/options specified with -D/
!_TAG_KIND_DESCRIPTION!CMake	f,function	/functions/
!_TAG_KIND_DESCRIPTION!CMake	m,macro	/macros/
!_TAG_KIND_DESCRIPTION!CMake	p,project	/projects/
!_TAG_KIND_DESCRIPTION!CMake	t,target	/targets/
!_TAG_KIND_DESCRIPTION!CMake	v,variable	/variable definitions/
!_TAG_KIND_DESCRIPTION!JSON	a,array	/arrays/
!_TAG_KIND_DESCRIPTION!JSON	b,boolean	/booleans/
!_TAG_KIND_DESCRIPTION!JSON	n,number	/numbers/
!_TAG_KIND_DESCRIPTION!JSON	o,object	/objects/
!_TAG_KIND_DESCRIPTION!JSON	s,string	/strings/
!_TAG_KIND_DESCRIPTION!JSON	z,null	/nulls/
!_TAG_KIND_DESCRIPTION!Lua	f,function	/functions/
!_TAG_KIND_DESCRIPTION!Markdown	S,subsection	/level 2 sections/
!_TAG_KIND_DESCRIPTION!Markdown	T,l4subsection	/level 4 sections/
!_TAG_KIND_DESCRIPTION!Markdown	c,chapter	/chapters/
!_TAG_KIND_DESCRIPTION!Markdown	h,hashtag	/hashtags/
!_TAG_KIND_DESCRIPTION!Markdown	n,footnote	/footnotes/
!_TAG_KIND_DESCRIPTION!Markdown	s,section	/sections/
!_TAG_KIND_DESCRIPTION!Markdown	t,subsubsection	/level 3 sections/
!_TAG_KIND_DESCRIPTION!Markdown	u,l5subsection	/level 5 sections/
!_TAG_OUTPUT_EXCMD	mixed	/number, pattern, mixed, or combineV2/
!_TAG_OUTPUT_FILESEP	slash	/slash or backslash/
!_TAG_OUTPUT_MODE	u-ctags	/u-ctags or e-ctags/
!_TAG_OUTPUT_VERSION	0.0	/current.age/
!_TAG_PARSER_VERSION!C++	1.1	/current.age/
!_TAG_PARSER_VERSION!CMake	0.0	/current.age/
!_TAG_PARSER_VERSION!JSON	0.0	/current.age/
!_TAG_PARSER_VERSION!Lua	0.0	/current.age/
!_TAG_PARSER_VERSION!Markdown	1.1	/current.age/
!_TAG_PATTERN_LENGTH_LIMIT	96	/0 for no limit/
!_TAG_PROC_CWD	C:/Users/hyper/AppData/Local/nvim/	//
!_TAG_PROGRAM_AUTHOR	Universal Ctags Team	//
!_TAG_PROGRAM_NAME	Universal Ctags	/Derived from Exuberant Ctags/
!_TAG_PROGRAM_URL	https://ctags.io/	/official site/
!_TAG_PROGRAM_VERSION	6.1.0	//
!_TAG_ROLE_DESCRIPTION!C++!header	local	/local header/
!_TAG_ROLE_DESCRIPTION!C++!header	system	/system header/
!_TAG_ROLE_DESCRIPTION!C++!macro	undef	/undefined/
BreakLastLine	./lua/plugins/debugger.lua	/^      local function BreakLastLine()$/;"	f
BuildAndDebug	./lua/config/build.lua	/^function BuildAndDebug()$/;"	f
BuildAndDebugCpp	./lua/config/build.lua	/^function BuildAndDebugCpp()$/;"	f
BuildAndDebugPython	./lua/config/build.lua	/^function BuildAndDebugPython()$/;"	f
BuildAndRun	./lua/config/build.lua	/^function BuildAndRun()$/;"	f
BuildAndRunCpp	./lua/config/build.lua	/^function BuildAndRunCpp()$/;"	f
BuildAndRunPython	./lua/config/build.lua	/^function BuildAndRunPython()$/;"	f
CMAKE_ARCHIVE_OUTPUT_DIRECTORY	./new_cpp_project/CMakeLists.txt	/^set(CMAKE_ARCHIVE_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}\/lib)$/;"	v
CMAKE_CXX_FLAGS_DEBUG	./new_cpp_project/CMakeLists.txt	/^set(CMAKE_CXX_FLAGS_DEBUG "-g -O0")$/;"	v
CMAKE_CXX_FLAGS_RELEASE	./new_cpp_project/CMakeLists.txt	/^set(CMAKE_CXX_FLAGS_RELEASE "-O1 -DNDEBUG")$/;"	v
CMAKE_CXX_STANDARD	./new_cpp_project/CMakeLists.txt	/^set(CMAKE_CXX_STANDARD 20)$/;"	v
CMAKE_CXX_STANDARD_REQUIRED	./new_cpp_project/CMakeLists.txt	/^set(CMAKE_CXX_STANDARD_REQUIRED ON)$/;"	v
CMAKE_C_FLAGS_DEBUG	./new_cpp_project/CMakeLists.txt	/^set(CMAKE_C_FLAGS_DEBUG "-g -O0")$/;"	v
CMAKE_C_FLAGS_RELEASE	./new_cpp_project/CMakeLists.txt	/^set(CMAKE_C_FLAGS_RELEASE "-O1 -DNDEBUG")   $/;"	v
CMAKE_EXPORT_COMPILE_COMMANDS	./new_cpp_project/CMakeLists.txt	/^set(CMAKE_EXPORT_COMPILE_COMMANDS ON)$/;"	v
CMAKE_LIBRARY_OUTPUT_DIRECTORY	./new_cpp_project/CMakeLists.txt	/^set(CMAKE_LIBRARY_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}\/lib)$/;"	v
CMAKE_RUNTIME_OUTPUT_DIRECTORY	./new_cpp_project/CMakeLists.txt	/^set(CMAKE_RUNTIME_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}\/bin)$/;"	v
ClearCache	./lua/plugins/dashboard.lua	/^function ClearCache()$/;"	f
CreateNewProject	./lua/plugins/dashboard.lua	/^function CreateNewProject()$/;"	f
DeleteFilesInFolder	./lua/plugins/dashboard.lua	/^function DeleteFilesInFolder(folder)$/;"	f
EXTERNAL_LIB_DIR	./new_cpp_project/CMakeLists.txt	/^set(EXTERNAL_LIB_DIR "D:\/libraries")$/;"	v
GenerateCMake	./lua/config/build.lua	/^function GenerateCMake()$/;"	f
ListModifiedBuffers	./lua/plugins/telescope.lua	/^      ListModifiedBuffers = function()$/;"	f
LuaSnip	./lazy-lock.json	/^  "LuaSnip": { "branch": "master", "commit": "03c8e67eb7293c404845b3982db895d59c0d1538" },$/;"	o
ToggleWarnings	./lua/plugins/lspconfig.lua	/^      local function ToggleWarnings()$/;"	f
ToggleWarnings	lua/plugins/lspconfig.lua	/^      local function ToggleWarnings()$/;"	f
UnsavedBuffers	./lua/plugins/telescope.lua	/^      UnsavedBuffers = function(f_opts)$/;"	f
["<C-a>"]	./lua/plugins/telescope.lua	/^              ["<C-a>"] = function() vim.cmd(':wa') end,$/;"	f
["<CR>"]	./lua/plugins/completion.lua	/^          ["<CR>"] = cmp.mapping(function(fallback)$/;"	f
["<CR>"]	lua/plugins/completion.lua	/^          ["<CR>"] = cmp.mapping(function(fallback)$/;"	f
["<S-Tab>"]	./lua/plugins/completion.lua	/^          ["<S-Tab>"] = cmp.mapping(function(fallback)$/;"	f
["<S-Tab>"]	lua/plugins/completion.lua	/^          ["<S-Tab>"] = cmp.mapping(function(fallback)$/;"	f
["<Tab>"]	./lua/plugins/completion.lua	/^          ["<Tab>"] = cmp.mapping(function(fallback)$/;"	f
["<Tab>"]	lua/plugins/completion.lua	/^          ["<Tab>"] = cmp.mapping(function(fallback)$/;"	f
action	./lua/plugins/dashboard.lua	/^            action = ':lua CreateNewProject()', -- Lua function to handle project creation$/;"	f
action	./lua/plugins/dashboard.lua	/^            action = function()$/;"	f
action	./lua/plugins/dashboard.lua	/^        action = function()$/;"	f
action	./lua/plugins/dashboard.lua	/^      action = function(_, index)$/;"	f
adaptive_separator	./lua/plugins/lualine.lua	/^local function adaptive_separator()$/;"	f
attach_mappings	./lua/plugins/dashboard.lua	/^    attach_mappings = function(_, map)$/;"	f
auto-session	./lazy-lock.json	/^  "auto-session": { "branch": "main", "commit": "021b64ed7d4ac68a37be3ad28d8e1cba5bec582c" },$/;"	o
before_highlight	./lua/plugins/themes.lua	/^      before_highlight = function(group, highlight, palette)$/;"	f
border	./lua/config/border.lua	/^local function border(hl_name)$/;"	f
border	./lua/plugins/completion.lua	/^      local function border(hl_name)$/;"	f
border	lua/plugins/completion.lua	/^      local function border(hl_name)$/;"	f
branch	./lazy-lock.json	/^  "LuaSnip": { "branch": "master", "commit": "03c8e67eb7293c404845b3982db895d59c0d1538" },$/;"	s	object:LuaSnip
branch	./lazy-lock.json	/^  "auto-session": { "branch": "main", "commit": "021b64ed7d4ac68a37be3ad28d8e1cba5bec582c" },$/;"	s	object:auto-session
branch	./lazy-lock.json	/^  "bufdelete.nvim": { "branch": "master", "commit": "f6bcea78afb3060b198125256f897040538bcb81" }/;"	s	object:bufdelete.nvim
branch	./lazy-lock.json	/^  "cmp-buffer": { "branch": "main", "commit": "3022dbc9166796b644a841a02de8dd1cc1d311fa" },$/;"	s	object:cmp-buffer
branch	./lazy-lock.json	/^  "cmp-cmdline": { "branch": "main", "commit": "d250c63aa13ead745e3a40f61fdd3470efde3923" },$/;"	s	object:cmp-cmdline
branch	./lazy-lock.json	/^  "cmp-nvim-lsp": { "branch": "main", "commit": "99290b3ec1322070bcfb9e846450a46f6efa50f0" },$/;"	s	object:cmp-nvim-lsp
branch	./lazy-lock.json	/^  "cmp-nvim-lua": { "branch": "main", "commit": "f12408bdb54c39c23e67cab726264c10db33ada8" },$/;"	s	object:cmp-nvim-lua
branch	./lazy-lock.json	/^  "cmp-path": { "branch": "main", "commit": "91ff86cd9c29299a64f968ebb45846c485725f23" },$/;"	s	object:cmp-path
branch	./lazy-lock.json	/^  "cmp_luasnip": { "branch": "master", "commit": "98d9cb5c2c38532bd9bdb481067b20fea8f32e90" },$/;"	s	object:cmp_luasnip
branch	./lazy-lock.json	/^  "conform.nvim": { "branch": "master", "commit": "70019124aa4f2e6838be9fbd2007f6d13b27a96d" },$/;"	s	object:conform.nvim
branch	./lazy-lock.json	/^  "dashboard-nvim": { "branch": "master", "commit": "ae309606940d26d8c9df8b048a6e136b6bbec478" }/;"	s	object:dashboard-nvim
branch	./lazy-lock.json	/^  "duck.nvim": { "branch": "main", "commit": "d8a6b08af440e5a0e2b3b357e2f78bb1883272cd" },$/;"	s	object:duck.nvim
branch	./lazy-lock.json	/^  "friendly-snippets": { "branch": "main", "commit": "efff286dd74c22f731cdec26a70b46e5b203c619" /;"	s	object:friendly-snippets
branch	./lazy-lock.json	/^  "gitsigns.nvim": { "branch": "main", "commit": "c2a273980eb2cbcabcd54690f06f041ea0c225c6" },$/;"	s	object:gitsigns.nvim
branch	./lazy-lock.json	/^  "gutentags_plus": { "branch": "master", "commit": "a0157ca0092a21f0947917945506fde3859c9cd2" }/;"	s	object:gutentags_plus
branch	./lazy-lock.json	/^  "lazy.nvim": { "branch": "main", "commit": "d8f26efd456190241afd1b0f5235fe6fdba13d4a" },$/;"	s	object:lazy.nvim
branch	./lazy-lock.json	/^  "lsp-status.nvim": { "branch": "master", "commit": "54f48eb5017632d81d0fd40112065f1d062d0629" /;"	s	object:lsp-status.nvim
branch	./lazy-lock.json	/^  "lsp_signature.nvim": { "branch": "master", "commit": "fc38521ea4d9ec8dbd4c2819ba8126cea743943/;"	s	object:lsp_signature.nvim
branch	./lazy-lock.json	/^  "lualine-time": { "branch": "main", "commit": "8838875e2e787293bb905d23dbb91ef4bde188ea" },$/;"	s	object:lualine-time
branch	./lazy-lock.json	/^  "lualine.nvim": { "branch": "master", "commit": "2a5bae925481f999263d6f5ed8361baef8df4f83" },$/;"	s	object:lualine.nvim
branch	./lazy-lock.json	/^  "neotest": { "branch": "master", "commit": "d66cf4e05a116957f0d3a7755a24291c7d1e1f72" },$/;"	s	object:neotest
branch	./lazy-lock.json	/^  "neotest-gtest": { "branch": "main", "commit": "16989561a6356878ec4ecd6afed4f0d7a471d1db" },$/;"	s	object:neotest-gtest
branch	./lazy-lock.json	/^  "nvim-autopairs": { "branch": "master", "commit": "b464658e9b880f463b9f7e6ccddd93fb0013f559" }/;"	s	object:nvim-autopairs
branch	./lazy-lock.json	/^  "nvim-cmp": { "branch": "main", "commit": "8c82d0bd31299dbff7f8e780f5e06d2283de9678" },$/;"	s	object:nvim-cmp
branch	./lazy-lock.json	/^  "nvim-colorizer.lua": { "branch": "master", "commit": "a065833f35a3a7cc3ef137ac88b5381da2ba302/;"	s	object:nvim-colorizer.lua
branch	./lazy-lock.json	/^  "nvim-dap": { "branch": "master", "commit": "0e673accbb512e1e191dfb4fecea89cc38c1bcdd" },$/;"	s	object:nvim-dap
branch	./lazy-lock.json	/^  "nvim-dap-exception-breakpoints": { "branch": "main", "commit": "1a71c189afd0b47640242c61f2088/;"	s	object:nvim-dap-exception-breakpoints
branch	./lazy-lock.json	/^  "nvim-dap-python": { "branch": "master", "commit": "34282820bb713b9a5fdb120ae8dd85c2b3f49b51" /;"	s	object:nvim-dap-python
branch	./lazy-lock.json	/^  "nvim-dap-ui": { "branch": "master", "commit": "e94d98649dccb6a3884b66aabc2e07beb279e535" },$/;"	s	object:nvim-dap-ui
branch	./lazy-lock.json	/^  "nvim-dap-virtual-text": { "branch": "master", "commit": "df66808cd78b5a97576bbaeee95ed5ca385a/;"	s	object:nvim-dap-virtual-text
branch	./lazy-lock.json	/^  "nvim-lspconfig": { "branch": "master", "commit": "8121483b8132b7053120fafd83728178fb3febf6" }/;"	s	object:nvim-lspconfig
branch	./lazy-lock.json	/^  "nvim-nio": { "branch": "master", "commit": "a428f309119086dc78dd4b19306d2d67be884eee" },$/;"	s	object:nvim-nio
branch	./lazy-lock.json	/^  "nvim-tree.lua": { "branch": "master", "commit": "68fc4c20f5803444277022c681785c5edd11916d" },$/;"	s	object:nvim-tree.lua
branch	./lazy-lock.json	/^  "nvim-treesitter": { "branch": "master", "commit": "622a4a6ba76d1de52b72a965159213ae655b4ac7" /;"	s	object:nvim-treesitter
branch	./lazy-lock.json	/^  "nvim-treesitter-context": { "branch": "master", "commit": "d0dd7ce5a9d0be1f28086e818e52fdc5c7/;"	s	object:nvim-treesitter-context
branch	./lazy-lock.json	/^  "nvim-web-devicons": { "branch": "master", "commit": "5740b7382429d20b6ed0bbdb0694185af9507d44/;"	s	object:nvim-web-devicons
branch	./lazy-lock.json	/^  "plenary.nvim": { "branch": "master", "commit": "2d9b06177a975543726ce5c73fca176cedbffe9d" },$/;"	s	object:plenary.nvim
branch	./lazy-lock.json	/^  "quick-scope": { "branch": "master", "commit": "4d35d3b2bc6794666353dcc241b2680bd560416f" },$/;"	s	object:quick-scope
branch	./lazy-lock.json	/^  "refactoring.nvim": { "branch": "master", "commit": "2db6d378e873de31d18ade549c2edba64ff1c2e3"/;"	s	object:refactoring.nvim
branch	./lazy-lock.json	/^  "rose-pine": { "branch": "main", "commit": "91548dca53b36dbb9d36c10f114385f759731be1" },$/;"	s	object:rose-pine
branch	./lazy-lock.json	/^  "telescope-file-browser.nvim": { "branch": "master", "commit": "626998e5c1b71c130d8bc6cf7abb67/;"	s	object:telescope-file-browser.nvim
branch	./lazy-lock.json	/^  "telescope-fzf-native.nvim": { "branch": "main", "commit": "dae2eac9d91464448b584c7949a31df8fa/;"	s	object:telescope-fzf-native.nvim
branch	./lazy-lock.json	/^  "telescope-recent-files": { "branch": "main", "commit": "3a7a1b9c6b52b6ff7938c59f64c87a05e013d/;"	s	object:telescope-recent-files
branch	./lazy-lock.json	/^  "telescope-ui-select.nvim": { "branch": "master", "commit": "6e51d7da30bd139a6950adf2a47fda6df/;"	s	object:telescope-ui-select.nvim
branch	./lazy-lock.json	/^  "telescope.nvim": { "branch": "0.1.x", "commit": "a0bbec21143c7bc5f8bb02e0005fa0b982edc026" },$/;"	s	object:telescope.nvim
branch	./lazy-lock.json	/^  "text-case.nvim": { "branch": "main", "commit": "e898cfd46fa6cde0e83abb624a16e67d2ffc6457" },$/;"	s	object:text-case.nvim
branch	./lazy-lock.json	/^  "todo-comments.nvim": { "branch": "main", "commit": "ae0a2afb47cf7395dc400e5dc4e05274bf4fb9e0"/;"	s	object:todo-comments.nvim
branch	./lazy-lock.json	/^  "undotree": { "branch": "main", "commit": "eab459ab87dd249617b5f7187bb69e614a083047" },$/;"	s	object:undotree
branch	./lazy-lock.json	/^  "vim-be-good": { "branch": "master", "commit": "0ae3de14eb8efc6effe7704b5e46495e91931cc5" },$/;"	s	object:vim-be-good
branch	./lazy-lock.json	/^  "vim-gutentags": { "branch": "master", "commit": "aa47c5e29c37c52176c44e61c780032dfacef3dd" },$/;"	s	object:vim-gutentags
branch	./lazy-lock.json	/^  "which-key.nvim": { "branch": "main", "commit": "1f8d414f61e0b05958c342df9b6a4c89ce268766" }$/;"	s	object:which-key.nvim
bufdelete.nvim	./lazy-lock.json	/^  "bufdelete.nvim": { "branch": "master", "commit": "f6bcea78afb3060b198125256f897040538bcb81" }/;"	o
build_and_run	./lua/config/build.lua	/^local function build_and_run()$/;"	f
build_only	./lua/config/build.lua	/^local function build_only()$/;"	f
callback	./lua/config/autocmds.lua	/^    callback = function()$/;"	f
callback	./lua/config/autocmds.lua	/^  callback = function()$/;"	f
callback	./lua/config/build.lua	/^    callback = function()$/;"	f
callback	./lua/plugins/nvimtree.lua	/^      callback = function()$/;"	f
callback	./lua/plugins/nvimtree.lua	/^      callback = function(e)$/;"	f
callback	./lua/plugins/quick_scope.lua	/^      callback = function()$/;"	f
check	./lua/health.lua	/^  check = function()$/;"	f
check_external_reqs	./lua/health.lua	/^local check_external_reqs = function()$/;"	f
check_version	./lua/health.lua	/^local check_version = function()$/;"	f
close_all_splits	./lua/plugins/dashboard.lua	/^local function close_all_splits()$/;"	f
close_empty_buffers	./lua/utilities.lua	/^function M.close_empty_buffers()$/;"	f	unknown:M
cmp-buffer	./lazy-lock.json	/^  "cmp-buffer": { "branch": "main", "commit": "3022dbc9166796b644a841a02de8dd1cc1d311fa" },$/;"	o
cmp-cmdline	./lazy-lock.json	/^  "cmp-cmdline": { "branch": "main", "commit": "d250c63aa13ead745e3a40f61fdd3470efde3923" },$/;"	o
cmp-nvim-lsp	./lazy-lock.json	/^  "cmp-nvim-lsp": { "branch": "main", "commit": "99290b3ec1322070bcfb9e846450a46f6efa50f0" },$/;"	o
cmp-nvim-lua	./lazy-lock.json	/^  "cmp-nvim-lua": { "branch": "main", "commit": "f12408bdb54c39c23e67cab726264c10db33ada8" },$/;"	o
cmp-path	./lazy-lock.json	/^  "cmp-path": { "branch": "main", "commit": "91ff86cd9c29299a64f968ebb45846c485725f23" },$/;"	o
cmp_luasnip	./lazy-lock.json	/^  "cmp_luasnip": { "branch": "master", "commit": "98d9cb5c2c38532bd9bdb481067b20fea8f32e90" },$/;"	o
commit	./lazy-lock.json	/^  "LuaSnip": { "branch": "master", "commit": "03c8e67eb7293c404845b3982db895d59c0d1538" },$/;"	s	object:LuaSnip
commit	./lazy-lock.json	/^  "auto-session": { "branch": "main", "commit": "021b64ed7d4ac68a37be3ad28d8e1cba5bec582c" },$/;"	s	object:auto-session
commit	./lazy-lock.json	/^  "bufdelete.nvim": { "branch": "master", "commit": "f6bcea78afb3060b198125256f897040538bcb81" }/;"	s	object:bufdelete.nvim
commit	./lazy-lock.json	/^  "cmp-buffer": { "branch": "main", "commit": "3022dbc9166796b644a841a02de8dd1cc1d311fa" },$/;"	s	object:cmp-buffer
commit	./lazy-lock.json	/^  "cmp-cmdline": { "branch": "main", "commit": "d250c63aa13ead745e3a40f61fdd3470efde3923" },$/;"	s	object:cmp-cmdline
commit	./lazy-lock.json	/^  "cmp-nvim-lsp": { "branch": "main", "commit": "99290b3ec1322070bcfb9e846450a46f6efa50f0" },$/;"	s	object:cmp-nvim-lsp
commit	./lazy-lock.json	/^  "cmp-nvim-lua": { "branch": "main", "commit": "f12408bdb54c39c23e67cab726264c10db33ada8" },$/;"	s	object:cmp-nvim-lua
commit	./lazy-lock.json	/^  "cmp-path": { "branch": "main", "commit": "91ff86cd9c29299a64f968ebb45846c485725f23" },$/;"	s	object:cmp-path
commit	./lazy-lock.json	/^  "cmp_luasnip": { "branch": "master", "commit": "98d9cb5c2c38532bd9bdb481067b20fea8f32e90" },$/;"	s	object:cmp_luasnip
commit	./lazy-lock.json	/^  "conform.nvim": { "branch": "master", "commit": "70019124aa4f2e6838be9fbd2007f6d13b27a96d" },$/;"	s	object:conform.nvim
commit	./lazy-lock.json	/^  "dashboard-nvim": { "branch": "master", "commit": "ae309606940d26d8c9df8b048a6e136b6bbec478" }/;"	s	object:dashboard-nvim
commit	./lazy-lock.json	/^  "duck.nvim": { "branch": "main", "commit": "d8a6b08af440e5a0e2b3b357e2f78bb1883272cd" },$/;"	s	object:duck.nvim
commit	./lazy-lock.json	/^  "friendly-snippets": { "branch": "main", "commit": "efff286dd74c22f731cdec26a70b46e5b203c619" /;"	s	object:friendly-snippets
commit	./lazy-lock.json	/^  "gitsigns.nvim": { "branch": "main", "commit": "c2a273980eb2cbcabcd54690f06f041ea0c225c6" },$/;"	s	object:gitsigns.nvim
commit	./lazy-lock.json	/^  "gutentags_plus": { "branch": "master", "commit": "a0157ca0092a21f0947917945506fde3859c9cd2" }/;"	s	object:gutentags_plus
commit	./lazy-lock.json	/^  "lazy.nvim": { "branch": "main", "commit": "d8f26efd456190241afd1b0f5235fe6fdba13d4a" },$/;"	s	object:lazy.nvim
commit	./lazy-lock.json	/^  "lsp-status.nvim": { "branch": "master", "commit": "54f48eb5017632d81d0fd40112065f1d062d0629" /;"	s	object:lsp-status.nvim
commit	./lazy-lock.json	/^  "lsp_signature.nvim": { "branch": "master", "commit": "fc38521ea4d9ec8dbd4c2819ba8126cea743943/;"	s	object:lsp_signature.nvim
commit	./lazy-lock.json	/^  "lualine-time": { "branch": "main", "commit": "8838875e2e787293bb905d23dbb91ef4bde188ea" },$/;"	s	object:lualine-time
commit	./lazy-lock.json	/^  "lualine.nvim": { "branch": "master", "commit": "2a5bae925481f999263d6f5ed8361baef8df4f83" },$/;"	s	object:lualine.nvim
commit	./lazy-lock.json	/^  "neotest": { "branch": "master", "commit": "d66cf4e05a116957f0d3a7755a24291c7d1e1f72" },$/;"	s	object:neotest
commit	./lazy-lock.json	/^  "neotest-gtest": { "branch": "main", "commit": "16989561a6356878ec4ecd6afed4f0d7a471d1db" },$/;"	s	object:neotest-gtest
commit	./lazy-lock.json	/^  "nvim-autopairs": { "branch": "master", "commit": "b464658e9b880f463b9f7e6ccddd93fb0013f559" }/;"	s	object:nvim-autopairs
commit	./lazy-lock.json	/^  "nvim-cmp": { "branch": "main", "commit": "8c82d0bd31299dbff7f8e780f5e06d2283de9678" },$/;"	s	object:nvim-cmp
commit	./lazy-lock.json	/^  "nvim-colorizer.lua": { "branch": "master", "commit": "a065833f35a3a7cc3ef137ac88b5381da2ba302/;"	s	object:nvim-colorizer.lua
commit	./lazy-lock.json	/^  "nvim-dap": { "branch": "master", "commit": "0e673accbb512e1e191dfb4fecea89cc38c1bcdd" },$/;"	s	object:nvim-dap
commit	./lazy-lock.json	/^  "nvim-dap-exception-breakpoints": { "branch": "main", "commit": "1a71c189afd0b47640242c61f2088/;"	s	object:nvim-dap-exception-breakpoints
commit	./lazy-lock.json	/^  "nvim-dap-python": { "branch": "master", "commit": "34282820bb713b9a5fdb120ae8dd85c2b3f49b51" /;"	s	object:nvim-dap-python
commit	./lazy-lock.json	/^  "nvim-dap-ui": { "branch": "master", "commit": "e94d98649dccb6a3884b66aabc2e07beb279e535" },$/;"	s	object:nvim-dap-ui
commit	./lazy-lock.json	/^  "nvim-dap-virtual-text": { "branch": "master", "commit": "df66808cd78b5a97576bbaeee95ed5ca385a/;"	s	object:nvim-dap-virtual-text
commit	./lazy-lock.json	/^  "nvim-lspconfig": { "branch": "master", "commit": "8121483b8132b7053120fafd83728178fb3febf6" }/;"	s	object:nvim-lspconfig
commit	./lazy-lock.json	/^  "nvim-nio": { "branch": "master", "commit": "a428f309119086dc78dd4b19306d2d67be884eee" },$/;"	s	object:nvim-nio
commit	./lazy-lock.json	/^  "nvim-tree.lua": { "branch": "master", "commit": "68fc4c20f5803444277022c681785c5edd11916d" },$/;"	s	object:nvim-tree.lua
commit	./lazy-lock.json	/^  "nvim-treesitter": { "branch": "master", "commit": "622a4a6ba76d1de52b72a965159213ae655b4ac7" /;"	s	object:nvim-treesitter
commit	./lazy-lock.json	/^  "nvim-treesitter-context": { "branch": "master", "commit": "d0dd7ce5a9d0be1f28086e818e52fdc5c7/;"	s	object:nvim-treesitter-context
commit	./lazy-lock.json	/^  "nvim-web-devicons": { "branch": "master", "commit": "5740b7382429d20b6ed0bbdb0694185af9507d44/;"	s	object:nvim-web-devicons
commit	./lazy-lock.json	/^  "plenary.nvim": { "branch": "master", "commit": "2d9b06177a975543726ce5c73fca176cedbffe9d" },$/;"	s	object:plenary.nvim
commit	./lazy-lock.json	/^  "quick-scope": { "branch": "master", "commit": "4d35d3b2bc6794666353dcc241b2680bd560416f" },$/;"	s	object:quick-scope
commit	./lazy-lock.json	/^  "refactoring.nvim": { "branch": "master", "commit": "2db6d378e873de31d18ade549c2edba64ff1c2e3"/;"	s	object:refactoring.nvim
commit	./lazy-lock.json	/^  "rose-pine": { "branch": "main", "commit": "91548dca53b36dbb9d36c10f114385f759731be1" },$/;"	s	object:rose-pine
commit	./lazy-lock.json	/^  "telescope-file-browser.nvim": { "branch": "master", "commit": "626998e5c1b71c130d8bc6cf7abb67/;"	s	object:telescope-file-browser.nvim
commit	./lazy-lock.json	/^  "telescope-fzf-native.nvim": { "branch": "main", "commit": "dae2eac9d91464448b584c7949a31df8fa/;"	s	object:telescope-fzf-native.nvim
commit	./lazy-lock.json	/^  "telescope-recent-files": { "branch": "main", "commit": "3a7a1b9c6b52b6ff7938c59f64c87a05e013d/;"	s	object:telescope-recent-files
commit	./lazy-lock.json	/^  "telescope-ui-select.nvim": { "branch": "master", "commit": "6e51d7da30bd139a6950adf2a47fda6df/;"	s	object:telescope-ui-select.nvim
commit	./lazy-lock.json	/^  "telescope.nvim": { "branch": "0.1.x", "commit": "a0bbec21143c7bc5f8bb02e0005fa0b982edc026" },$/;"	s	object:telescope.nvim
commit	./lazy-lock.json	/^  "text-case.nvim": { "branch": "main", "commit": "e898cfd46fa6cde0e83abb624a16e67d2ffc6457" },$/;"	s	object:text-case.nvim
commit	./lazy-lock.json	/^  "todo-comments.nvim": { "branch": "main", "commit": "ae0a2afb47cf7395dc400e5dc4e05274bf4fb9e0"/;"	s	object:todo-comments.nvim
commit	./lazy-lock.json	/^  "undotree": { "branch": "main", "commit": "eab459ab87dd249617b5f7187bb69e614a083047" },$/;"	s	object:undotree
commit	./lazy-lock.json	/^  "vim-be-good": { "branch": "master", "commit": "0ae3de14eb8efc6effe7704b5e46495e91931cc5" },$/;"	s	object:vim-be-good
commit	./lazy-lock.json	/^  "vim-gutentags": { "branch": "master", "commit": "aa47c5e29c37c52176c44e61c780032dfacef3dd" },$/;"	s	object:vim-gutentags
commit	./lazy-lock.json	/^  "which-key.nvim": { "branch": "main", "commit": "1f8d414f61e0b05958c342df9b6a4c89ce268766" }$/;"	s	object:which-key.nvim
cond	./lua/plugins/git.lua	/^    cond = function()$/;"	f
cond	./lua/plugins/telescope.lua	/^        cond = function()$/;"	f
config	./lua/plugins/autopairs.lua	/^  config = function()$/;"	f
config	./lua/plugins/autosession.lua	/^    config = function()$/;"	f
config	./lua/plugins/bufdelete.lua	/^    config = function()$/;"	f
config	./lua/plugins/completion.lua	/^    config = function()$/;"	f
config	./lua/plugins/dashboard.lua	/^	config = function(_, opts)$/;"	f
config	./lua/plugins/debugger.lua	/^    config = function()$/;"	f
config	./lua/plugins/duck.lua	/^  config = function()$/;"	f
config	./lua/plugins/formatting.lua	/^    config = function()$/;"	f
config	./lua/plugins/git.lua	/^    config = function ()$/;"	f
config	./lua/plugins/lspconfig.lua	/^    config = function()$/;"	f
config	./lua/plugins/lspsignature.lua	/^    config = function(_, opts) require 'lsp_signature'.on_attach(opts) end -- Load when LSP serv/;"	f
config	./lua/plugins/lspstatus.lua	/^  config = function()$/;"	f
config	./lua/plugins/lualine.lua	/^    config = function()$/;"	f
config	./lua/plugins/luasnip.lua	/^	  config = function()$/;"	f
config	./lua/plugins/luasnip.lua	/^    config = function()$/;"	f
config	./lua/plugins/neotest.lua	/^  config = function()$/;"	f
config	./lua/plugins/nvimtree.lua	/^  config = function()$/;"	f
config	./lua/plugins/nvimtree.lua	/^  config = function(_, opts)$/;"	f
config	./lua/plugins/quick_scope.lua	/^  config = function()$/;"	f
config	./lua/plugins/sticky_header.lua	/^  config = function()$/;"	f
config	./lua/plugins/telescope.lua	/^    config = function()$/;"	f
config	./lua/plugins/text_case.lua	/^    config = function()$/;"	f
config	./lua/plugins/themes.lua	/^    config = function()$/;"	f
config	./lua/plugins/themes.lua	/^    config = function(_, opts)$/;"	f
config	./lua/plugins/treesitter.lua	/^  config = function(_, opts)$/;"	f
config	./lua/plugins/undotree.lua	/^    config = function()$/;"	f
config	./lua/plugins/whichkey.lua	/^    config = function ()$/;"	f
config	lua/plugins/completion.lua	/^    config = function()$/;"	f
config	lua/plugins/lspconfig.lua	/^    config = function()$/;"	f
conform.nvim	./lazy-lock.json	/^  "conform.nvim": { "branch": "master", "commit": "70019124aa4f2e6838be9fbd2007f6d13b27a96d" },$/;"	o
current_scope_name	./lua/plugins/lualine.lua	/^local function current_scope_name()$/;"	f
dapui_config	./lua/plugins/debugger.lua	/^      dap.listeners.before.attach.dapui_config = function()$/;"	f	unknown:dap.listeners.before.attach
dapui_config	./lua/plugins/debugger.lua	/^      dap.listeners.before.event_exited.dapui_config = function()$/;"	f	unknown:dap.listeners.before.event_exited
dapui_config	./lua/plugins/debugger.lua	/^      dap.listeners.before.event_terminated.dapui_config = function()$/;"	f	unknown:dap.listeners.before.event_terminated
dapui_config	./lua/plugins/debugger.lua	/^      dap.listeners.before.launch.dapui_config = function()$/;"	f	unknown:dap.listeners.before.launch
dashboard-nvim	./lazy-lock.json	/^  "dashboard-nvim": { "branch": "master", "commit": "ae309606940d26d8c9df8b048a6e136b6bbec478" }/;"	o
delete_buffer	./lua/plugins/telescope.lua	/^      require('telescope').actions.delete_buffer = function(prompt_bufnr)$/;"	f	unknown:actions
delete_selected_buffer	./lua/plugins/telescope.lua	/^      local function delete_selected_buffer()$/;"	f
description	./lua/plugins/debugger.lua	/^              description = "Break on failed assertions (abort function)",$/;"	f
disable	./lua/plugins/treesitter.lua	/^			disable = function(lang, buf)$/;"	f
disable_whichwrap_on_shift	./lua/config/whichwrap.lua	/^local disable_whichwrap_on_shift = function(mode, key)$/;"	f
display_callback	./lua/plugins/debugger.lua	/^        display_callback = function(variable, buf, stackframe, node, options)$/;"	f
duck.nvim	./lazy-lock.json	/^  "duck.nvim": { "branch": "main", "commit": "d8a6b08af440e5a0e2b3b357e2f78bb1883272cd" },$/;"	o
event_initialized["dapui_config"]	./lua/plugins/debugger.lua	/^      dap.listeners.after.event_initialized["dapui_config"] = function()$/;"	f	unknown:dap.listeners.after
expand	./lua/plugins/completion.lua	/^          expand = function(args)$/;"	f
expand	lua/plugins/completion.lua	/^          expand = function(args)$/;"	f
fast_wrap	./lua/plugins/autopairs.lua	/^      fast_wrap = {},                              -- Enables wrapping functionality$/;"	f
first_word_begin	./lua/config/whichwrap.lua	/^local first_word_begin = function ()$/;"	f
fmt	./lua/plugins/lualine.lua	/^            { 'location', fmt = function()$/;"	f
fmt	./lua/plugins/lualine.lua	/^            { 'time', fmt = function()$/;"	f
format	./lua/plugins/completion.lua	/^        format = function(_, item)$/;"	f
format	lua/plugins/completion.lua	/^        format = function(_, item)$/;"	f
format_on_save	./lua/plugins/formatting.lua	/^      format_on_save = function(bufnr)$/;"	f
friendly-snippets	./lazy-lock.json	/^  "friendly-snippets": { "branch": "main", "commit": "efff286dd74c22f731cdec26a70b46e5b203c619" /;"	o
get_bufnrs	./lua/plugins/completion.lua	/^              get_bufnrs = function()$/;"	f
get_bufnrs	lua/plugins/completion.lua	/^              get_bufnrs = function()$/;"	f
get_word_positions	./lua/config/whichwrap.lua	/^local function get_word_positions()$/;"	f
gitsigns.nvim	./lazy-lock.json	/^  "gitsigns.nvim": { "branch": "main", "commit": "c2a273980eb2cbcabcd54690f06f041ea0c225c6" },$/;"	o
gutentags_plus	./lazy-lock.json	/^  "gutentags_plus": { "branch": "master", "commit": "a0157ca0092a21f0947917945506fde3859c9cd2" }/;"	o
handlers["textDocument/publishDiagnostics"]	./lua/config/autocmds.lua	/^vim.lsp.handlers["textDocument\/publishDiagnostics"] = function(_, result, ctx, config)$/;"	f	unknown:vim.lsp
init	./lua/plugins/themes.lua	/^    init = function()$/;"	f
insert_char_pre	./lua/plugins/completion.lua	/^          insert_char_pre = function(char)$/;"	f
insert_char_pre	lua/plugins/completion.lua	/^          insert_char_pre = function(char)$/;"	f
is_buffer_writable	./lua/plugins/quick_scope.lua	/^    local function is_buffer_writable()$/;"	f
is_terminal_open	./lua/config/build.lua	/^local function is_terminal_open(name)$/;"	f
last_word_begin	./lua/config/whichwrap.lua	/^local last_word_begin = function ()$/;"	f
lazy.nvim	./lazy-lock.json	/^  "lazy.nvim": { "branch": "main", "commit": "d8f26efd456190241afd1b0f5235fe6fdba13d4a" },$/;"	o
left_shift_whichwrap	./lua/config/whichwrap.lua	/^function M.left_shift_whichwrap()$/;"	f	unknown:M
left_shift_whichwrap	./lua/config/whichwrap.lua	/^local function left_shift_whichwrap()$/;"	f
lsp-status.nvim	./lazy-lock.json	/^  "lsp-status.nvim": { "branch": "master", "commit": "54f48eb5017632d81d0fd40112065f1d062d0629" /;"	o
lsp_signature.nvim	./lazy-lock.json	/^  "lsp_signature.nvim": { "branch": "master", "commit": "fc38521ea4d9ec8dbd4c2819ba8126cea743943/;"	o
lualine-time	./lazy-lock.json	/^  "lualine-time": { "branch": "main", "commit": "8838875e2e787293bb905d23dbb91ef4bde188ea" },$/;"	o
lualine.nvim	./lazy-lock.json	/^  "lualine.nvim": { "branch": "master", "commit": "2a5bae925481f999263d6f5ed8361baef8df4f83" },$/;"	o
lualine_b	./lua/plugins/lualine.lua	/^          lualine_b = { {function() current_scope_name() end} },$/;"	f
main	./new_cpp_project/src/main.cpp	/^int main() {$/;"	f	typeref:typename:int
map	./lua/plugins/git.lua	/^        local function map(mode, l, r, opts)$/;"	f
max_height	./lua/plugins/debugger.lua	/^          max_height = nil,  -- These can be a number or function, defaults to nil$/;"	f
neotest	./lazy-lock.json	/^  "neotest": { "branch": "master", "commit": "d66cf4e05a116957f0d3a7755a24291c7d1e1f72" },$/;"	o
neotest-gtest	./lazy-lock.json	/^  "neotest-gtest": { "branch": "main", "commit": "16989561a6356878ec4ecd6afed4f0d7a471d1db" },$/;"	o
non_hidden_bufs	./lua/config/autocmds.lua	/^    local non_hidden_bufs = vim.tbl_filter(function(buf)$/;"	f
nvim-autopairs	./lazy-lock.json	/^  "nvim-autopairs": { "branch": "master", "commit": "b464658e9b880f463b9f7e6ccddd93fb0013f559" }/;"	o
nvim-cmp	./lazy-lock.json	/^  "nvim-cmp": { "branch": "main", "commit": "8c82d0bd31299dbff7f8e780f5e06d2283de9678" },$/;"	o
nvim-colorizer.lua	./lazy-lock.json	/^  "nvim-colorizer.lua": { "branch": "master", "commit": "a065833f35a3a7cc3ef137ac88b5381da2ba302/;"	o
nvim-config	./README.md	/^# nvim-config$/;"	c
nvim-dap	./lazy-lock.json	/^  "nvim-dap": { "branch": "master", "commit": "0e673accbb512e1e191dfb4fecea89cc38c1bcdd" },$/;"	o
nvim-dap-exception-breakpoints	./lazy-lock.json	/^  "nvim-dap-exception-breakpoints": { "branch": "main", "commit": "1a71c189afd0b47640242c61f2088/;"	o
nvim-dap-python	./lazy-lock.json	/^  "nvim-dap-python": { "branch": "master", "commit": "34282820bb713b9a5fdb120ae8dd85c2b3f49b51" /;"	o
nvim-dap-ui	./lazy-lock.json	/^  "nvim-dap-ui": { "branch": "master", "commit": "e94d98649dccb6a3884b66aabc2e07beb279e535" },$/;"	o
nvim-dap-virtual-text	./lazy-lock.json	/^  "nvim-dap-virtual-text": { "branch": "master", "commit": "df66808cd78b5a97576bbaeee95ed5ca385a/;"	o
nvim-lspconfig	./lazy-lock.json	/^  "nvim-lspconfig": { "branch": "master", "commit": "8121483b8132b7053120fafd83728178fb3febf6" }/;"	o
nvim-nio	./lazy-lock.json	/^  "nvim-nio": { "branch": "master", "commit": "a428f309119086dc78dd4b19306d2d67be884eee" },$/;"	o
nvim-tree.lua	./lazy-lock.json	/^  "nvim-tree.lua": { "branch": "master", "commit": "68fc4c20f5803444277022c681785c5edd11916d" },$/;"	o
nvim-treesitter	./lazy-lock.json	/^  "nvim-treesitter": { "branch": "master", "commit": "622a4a6ba76d1de52b72a965159213ae655b4ac7" /;"	o
nvim-treesitter-context	./lazy-lock.json	/^  "nvim-treesitter-context": { "branch": "master", "commit": "d0dd7ce5a9d0be1f28086e818e52fdc5c7/;"	o
nvim-web-devicons	./lazy-lock.json	/^  "nvim-web-devicons": { "branch": "master", "commit": "5740b7382429d20b6ed0bbdb0694185af9507d44/;"	o
on_action	./lua/plugins/telescope.lua	/^    on_action = function(prompt_bufnr)$/;"	f
on_attach	./lua/plugins/git.lua	/^      on_attach = function(bufnr)$/;"	f
on_attach	./lua/plugins/lspconfig.lua	/^      M.on_attach = function(_, bufnr)$/;"	f	unknown:M
on_attach	./lua/plugins/treesitter.lua	/^    local function on_attach(_, _)$/;"	f
on_attach	lua/plugins/lspconfig.lua	/^      M.on_attach = function(_, bufnr)$/;"	f	unknown:M
on_exit	./lua/config/build.lua	/^    on_exit = function(_, exit_code)$/;"	f
on_exit	./lua/config/build.lua	/^  on_exit = function(_, exit_code)$/;"	f
on_init	./lua/plugins/lspconfig.lua	/^      M.on_init = function(client, _)$/;"	f	unknown:M
on_init	lua/plugins/lspconfig.lua	/^      M.on_init = function(client, _)$/;"	f	unknown:M
on_stderr	./lua/config/build.lua	/^  on_stderr = function(_, data)$/;"	f
on_stdout	./lua/config/build.lua	/^    on_stdout = function(_, line)$/;"	f
on_stdout	./lua/config/build.lua	/^  on_stdout = function(_, data)$/;"	f
open_dashboard	./lua/plugins/dashboard.lua	/^local function open_dashboard()$/;"	f
opts	./lua/plugins/lspconfig.lua	/^        local function opts(desc)$/;"	f
opts	./lua/plugins/themes.lua	/^        opts = function(_, opts)$/;"	f
opts	lua/plugins/lspconfig.lua	/^        local function opts(desc)$/;"	f
plenary.nvim	./lazy-lock.json	/^  "plenary.nvim": { "branch": "master", "commit": "2d9b06177a975543726ce5c73fca176cedbffe9d" },$/;"	o
proj	./new_cpp_project/CMakeLists.txt	/^project(proj)$/;"	p
proj	./new_cpp_project/src/CMakeLists.txt	/^add_executable(proj ${SOURCES} ${HEADERS})$/;"	t
quick-scope	./lazy-lock.json	/^  "quick-scope": { "branch": "master", "commit": "4d35d3b2bc6794666353dcc241b2680bd560416f" },$/;"	o
refactoring.nvim	./lazy-lock.json	/^  "refactoring.nvim": { "branch": "master", "commit": "2db6d378e873de31d18ade549c2edba64ff1c2e3"/;"	o
reopen_nvim_tree_if_opened	./lua/plugins/debugger.lua	/^      local function reopen_nvim_tree_if_opened()$/;"	f
right_shift_whichwrap	./lua/config/whichwrap.lua	/^function M.right_shift_whichwrap()$/;"	f	unknown:M
right_shift_whichwrap	./lua/config/whichwrap.lua	/^function M.right_shift_whichwrap(offset)$/;"	f	unknown:M
right_shift_whichwrap	./lua/config/whichwrap.lua	/^local function right_shift_whichwrap()$/;"	f
root_dir	./lua/plugins/lspconfig.lua	/^        root_dir = function(fname)$/;"	f
root_dir	lua/plugins/lspconfig.lua	/^        root_dir = function(fname)$/;"	f
root_folder_label	./lua/plugins/nvimtree.lua	/^        root_folder_label = function()$/;"	f
rose-pine	./lazy-lock.json	/^  "rose-pine": { "branch": "main", "commit": "91548dca53b36dbb9d36c10f114385f759731be1" },$/;"	o
run_only	./lua/config/build.lua	/^local function run_only()$/;"	f
save_selected_buffer	./lua/plugins/telescope.lua	/^      local save_selected_buffer = function()$/;"	f
select_symbol	./lua/plugins/lspstatus.lua	/^      select_symbol = function(cursor_pos, symbol)$/;"	f
telescope-file-browser.nvim	./lazy-lock.json	/^  "telescope-file-browser.nvim": { "branch": "master", "commit": "626998e5c1b71c130d8bc6cf7abb67/;"	o
telescope-fzf-native.nvim	./lazy-lock.json	/^  "telescope-fzf-native.nvim": { "branch": "main", "commit": "dae2eac9d91464448b584c7949a31df8fa/;"	o
telescope-recent-files	./lazy-lock.json	/^  "telescope-recent-files": { "branch": "main", "commit": "3a7a1b9c6b52b6ff7938c59f64c87a05e013d/;"	o
telescope-ui-select.nvim	./lazy-lock.json	/^  "telescope-ui-select.nvim": { "branch": "master", "commit": "6e51d7da30bd139a6950adf2a47fda6df/;"	o
telescope.nvim	./lazy-lock.json	/^  "telescope.nvim": { "branch": "0.1.x", "commit": "a0bbec21143c7bc5f8bb02e0005fa0b982edc026" },$/;"	o
text-case.nvim	./lazy-lock.json	/^  "text-case.nvim": { "branch": "main", "commit": "e898cfd46fa6cde0e83abb624a16e67d2ffc6457" },$/;"	o
todo-comments.nvim	./lazy-lock.json	/^  "todo-comments.nvim": { "branch": "main", "commit": "ae0a2afb47cf7395dc400e5dc4e05274bf4fb9e0"/;"	o
toggle_quick_scope	./lua/plugins/quick_scope.lua	/^    local function toggle_quick_scope()$/;"	f
toggle_terminal	./lua/config/build.lua	/^local function toggle_terminal(name, pos)$/;"	f
undotree	./lazy-lock.json	/^  "undotree": { "branch": "main", "commit": "eab459ab87dd249617b5f7187bb69e614a083047" },$/;"	o
vim-be-good	./lazy-lock.json	/^  "vim-be-good": { "branch": "master", "commit": "0ae3de14eb8efc6effe7704b5e46495e91931cc5" },$/;"	o
vim-gutentags	./lazy-lock.json	/^  "vim-gutentags": { "branch": "master", "commit": "aa47c5e29c37c52176c44e61c780032dfacef3dd" },$/;"	o
which-key.nvim	./lazy-lock.json	/^  "which-key.nvim": { "branch": "main", "commit": "1f8d414f61e0b05958c342df9b6a4c89ce268766" }$/;"	o
